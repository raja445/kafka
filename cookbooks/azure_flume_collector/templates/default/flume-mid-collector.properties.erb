# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.


# The configuration file needs to define the sources, 
# the channels and the sinks.
# Sources, channels and sinks are defined per agent, 
# in this case called 'mid-collector'

####################################################################################################
#avro source => disk backed memory => kafka
####################################################################################################

mid-collector.sources =<% @sources.each do |src, details| %><%= " #{src}" %><% end %>
mid-collector.channels = <% @channels.each do |channel, details| %><%= " #{channel}" %><% end %>
mid-collector.sinks = <% @sinks.each do |sink, details| %><%= " #{sink}" %><% end %>


<% @sources.each do |src, details| %>
mid-collector.sources.<%= "#{src}" %>.type = <%= details[:type] %>
mid-collector.sources.<%= "#{src}" %>.channels = <%= details[:channels] %>
mid-collector.sources.<%= "#{src}" %>.selector.type = <%= details[:'selector.type'] %>
mid-collector.sources.<%= "#{src}" %>.selector.optional  = <%= details[:optionalchannels] %>
mid-collector.sources.<%= "#{src}" %>.bind = <%= details[:bind] %>
mid-collector.sources.<%= "#{src}" %>.port = <%= details[:port] %>
<% if details[:'enable_compression'] == true -%>
mid-collector.sources.<%= "#{src}" %>.compression-type=<%= details[:'compression-type'] %>
<% end -%>
mid-collector.sources.<%= "#{src}" %>.interceptors = whitelister_<%= "#{src}" %>
mid-collector.sources.<%= "#{src}" %>.interceptors.whitelister_<%= "#{src}" %>.type = org.apache.flume.interceptor.TopicWhitelistFilter$Builder
mid-collector.sources.<%= "#{src}" %>.interceptors.whitelister_<%= "#{src}" %>.zkServers = <%= details[:'kafka.zookeeper'] %>
<% end %>

# keep in sync with previous collector in the chain
# mid-collector.sinks.avrosrc.compression-type = deflate
# for tuning
# mid-collector.sinks.avrosrc.batch-size = 100


<% @sinks.each do |sink, details| %>
<% if details[:'sink_category'] == 'lhr1avro' -%>
mid-collector.sinks.<%= "#{sink}" %>.type = <%= details[:type] %>
mid-collector.sinks.<%= "#{sink}" %>.channel = <%= details[:channel] %>
mid-collector.sinks.<%= "#{sink}" %>.hostname = <%= details[:hostname] %>
mid-collector.sinks.<%= "#{sink}" %>.port = <%= details[:port] %>
<% if details[:'enable_compression'] == true -%>
mid-collector.sinks.<%= "#{sink}" %>.compression-type = <%= details[:'compression_type'] %>
<% end -%>
mid-collector.sinks.<%= "#{sink}" %>.batch-size = <%= details[:'batch-size'] %>
mid-collector.sinks.<%= "#{sink}" %>.reset-connection-interval = <%= details[:'reset-connection-interval'] %>
<% end %>

<% if details[:'sink_category'] == 'azurekafka' -%>
mid-collector.sinks.<%= "#{sink}" %>.type = <%= details[:type] %>
mid-collector.sinks.<%= "#{sink}" %>.channel = <%= details[:channel] %>
mid-collector.sinks.<%= "#{sink}" %>.topicHeader = <%= details[:topicHeader] %>
mid-collector.sinks.<%= "#{sink}" %>.flumeBatchSize = <%= details[:flumeBatchSize] %>
mid-collector.sinks.<%= "#{sink}" %>.kafka.bootstrap.servers = <%= details[:'kafka.bootstrap.servers'] %>
mid-collector.sinks.<%= "#{sink}" %>.kafka.topic = <%= details[:'kafka.topic'] %>
mid-collector.sinks.<%= "#{sink}" %>.kafka.producer.acks = all
# valid values none, gzip, snappy
mid-collector.sinks.<%= "#{sink}" %>.kafka.producer.compression.type = <%= details[:'kafka.producer.compression.type'] %>
<% end %>
<% end %>



<% @channels.each do |channel, details| %>
mid-collector.channels.<%= "#{channel}" %>.type = <%= details[:type] %>
mid-collector.channels.<%= "#{channel}" %>.capacity = <%= details[:capacity] %>
mid-collector.channels.<%= "#{channel}" %>.transactionCapacity = <%= details[:transactionCapacity] %>
mid-collector.channels.<%= "#{channel}" %>.spoolDirectories = <%= @spooldir %>/<%= "#{channel}" %>
mid-collector.channels.<%= "#{channel}" %>.spoolDiskCapacityMB = <%= details[:spoolDiskCapacityMB] %>
<% end %>
